{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vdom/Desktop/projects ower/pag-own/pages/post/[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// post.js\nimport { useRouter } from \"next/router\";\nimport client from \"../../client\";\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var _props = props,\n      _props$title = _props.title,\n      title = _props$title === void 0 ? \"Missing title\" : _props$title,\n      _props$name = _props.name,\n      name = _props$name === void 0 ? \"Missing name\" : _props$name;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: router.query.slug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(\"\\n    *[_type == \\\"post\\\" && slug.current == $slug][0]{title, \\\"name\\\": author->name}\\n  \", {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/vdom/Desktop/projects ower/pag-own/pages/post/[slug].js"],"names":["useRouter","client","Post","router","props","title","name","query","slug","getInitialProps","context","fetch"],"mappings":";;;;;;;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADiB,eAE0CI,KAF1C;AAAA,4BAETC,KAFS;AAAA,MAETA,KAFS,6BAED,eAFC;AAAA,2BAEgBC,IAFhB;AAAA,MAEgBA,IAFhB,4BAEuB,cAFvB;AAGjB,sBACE;AAAA,4BACE;AAAA,gBAAKH,MAAM,CAACI,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAVD;;GAAMJ,I;UACWF,S;;;KADXE,I;;AAYNA,IAAI,CAACO,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,kCAECA,OAAO,CAACH,KAFT,CAEbC,IAFa,EAEbA,IAFa,oCAEN,EAFM;AAAA;AAAA,mBAGRP,MAAM,CAACU,KAAP,8FAIX;AAAEH,cAAAA,IAAI,EAAJA;AAAF,aAJW,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeN,IAAf","sourcesContent":["// post.js\nimport { useRouter } from \"next/router\";\nimport client from \"../../client\";\n\nconst Post = () => {\n  const router = useRouter();\n  const { title = \"Missing title\", name = \"Missing name\" } = props;\n  return (\n    <article>\n      <h1>{router.query.slug}</h1>\n      <h1>{title}</h1>\n      <h1>{name}</h1>\n    </article>\n  );\n};\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query;\n  return await client.fetch(\n    `\n    *[_type == \"post\" && slug.current == $slug][0]{title, \"name\": author->name}\n  `,\n    { slug }\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}